{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ResourcesName": {
      "type": "string",
      "defaultValue": "ontologies",
      "minLength": 2,
      "metadata": {
        "description": "Name of resources to be deployed."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "East US 2",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "The SKU of App Service Plan."
      }
    },
    "linuxFxVersion": {
      "type": "string",
      "defaultValue": "DOTNETCORE|3.0",
      "metadata": {
        "description": "The Runtime stack of current web app"
      }
    },
    "repoUrl": {
      "type": "string",
      "defaultValue": "https://digitaltwinconsortium/ua-cloudtwin:main",
      "metadata": {
        "description": "Optional Git Repo URL"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "secureString",
      "minLength": 12,
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "ontologies",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIpName": {
      "type": "string",
      "defaultValue": "myPublicIP",
      "metadata": {
        "description": "Name for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIPAllocationMethod": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Allocation method for the Public IP used to access the Virtual Machine."
      }
    },
    "publicIpSku": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "SKU for the Public IP used to access the Virtual Machine."
      }
    },
    "OSVersion": {
      "type": "string",
      "defaultValue": "2022-datacenter-azure-edition-core",
      "allowedValues": [
        "2008-R2-SP1",
        "2008-R2-SP1-smalldisk",
        "2012-Datacenter",
        "2012-datacenter-gensecond",
        "2012-Datacenter-smalldisk",
        "2012-datacenter-smalldisk-g2",
        "2012-Datacenter-zhcn",
        "2012-datacenter-zhcn-g2",
        "2012-R2-Datacenter",
        "2012-r2-datacenter-gensecond",
        "2012-R2-Datacenter-smalldisk",
        "2012-r2-datacenter-smalldisk-g2",
        "2012-R2-Datacenter-zhcn",
        "2012-r2-datacenter-zhcn-g2",
        "2016-Datacenter",
        "2016-datacenter-gensecond",
        "2016-datacenter-gs",
        "2016-Datacenter-Server-Core",
        "2016-datacenter-server-core-g2",
        "2016-Datacenter-Server-Core-smalldisk",
        "2016-datacenter-server-core-smalldisk-g2",
        "2016-Datacenter-smalldisk",
        "2016-datacenter-smalldisk-g2",
        "2016-Datacenter-with-Containers",
        "2016-datacenter-with-containers-g2",
        "2016-datacenter-with-containers-gs",
        "2016-Datacenter-zhcn",
        "2016-datacenter-zhcn-g2",
        "2019-Datacenter",
        "2019-Datacenter-Core",
        "2019-datacenter-core-g2",
        "2019-Datacenter-Core-smalldisk",
        "2019-datacenter-core-smalldisk-g2",
        "2019-Datacenter-Core-with-Containers",
        "2019-datacenter-core-with-containers-g2",
        "2019-Datacenter-Core-with-Containers-smalldisk",
        "2019-datacenter-core-with-containers-smalldisk-g2",
        "2019-datacenter-gensecond",
        "2019-datacenter-gs",
        "2019-Datacenter-smalldisk",
        "2019-datacenter-smalldisk-g2",
        "2019-Datacenter-with-Containers",
        "2019-datacenter-with-containers-g2",
        "2019-datacenter-with-containers-gs",
        "2019-Datacenter-with-Containers-smalldisk",
        "2019-datacenter-with-containers-smalldisk-g2",
        "2019-Datacenter-zhcn",
        "2019-datacenter-zhcn-g2",
        "2022-datacenter",
        "2022-datacenter-azure-edition",
        "2022-datacenter-azure-edition-core",
        "2022-datacenter-azure-edition-core-smalldisk",
        "2022-datacenter-azure-edition-smalldisk",
        "2022-datacenter-core",
        "2022-datacenter-core-g2",
        "2022-datacenter-core-smalldisk",
        "2022-datacenter-core-smalldisk-g2",
        "2022-datacenter-g2",
        "2022-datacenter-smalldisk",
        "2022-datacenter-smalldisk-g2"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v5",
      "metadata": {
        "description": "Size of the virtual machine."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "ontologies",
      "metadata": {
        "description": "Name of the virtual machine."
      }
    },
    "clusters_kustocluster_name": {
      "type": "string",
      "defaultValue": "ontologies",
      "metadata": {
        "description": "Name of the cluster to create"
      }
    },
    "databases_kustodb_name": {
      "type": "string",
      "defaultValue": "ontologies",
      "metadata": {
        "description": "Name of the database to create"
      }
    }
  },
  "variables": {
    "appServicePlanPortalName": "[parameters('ResourcesName')]",
    "storageAccountName": "[format('bootdiags{0}', uniqueString(resourceGroup().id))]",
    "nicName": "myVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "virtualNetworkName": "MyVNET",
    "networkSecurityGroupName": "default-NSG"
  },
  "resources": [
    {
      "type": "Microsoft.DigitalTwins/digitalTwinsInstances",
      "apiVersion": "2020-10-31",
      "name": "[parameters('ResourcesName')]",
      "location": "[parameters('location')]",
      "tags": {
        "tagName1": "tagValue1",
        "tagName2": "tagValue2"
      },
      "identity": {
        "type": "string"
      },
      "properties": {
        "privateEndpointConnections": [
          {
            "properties": {
              "groupIds": [ "string" ],
              "privateEndpoint": {},
              "privateLinkServiceConnectionState": {
                "actionsRequired": "string",
                "description": "string",
                "status": "string"
              }
            }
          }
        ],
        "publicNetworkAccess": "string"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-02-01",
      "name": "[variables('appServicePlanPortalName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[parameters('ResourcesName')]",
      "location": "[parameters('location')]",
      "properties": {
        "httpsOnly": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]",
        "siteConfig": {
          "linuxFxVersion": "[parameters('linuxFxVersion')]",
          "minTlsVersion": "1.2",
          "ftpsState": "FtpsOnly"
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      ]
    },
    {
      "condition": "[contains(parameters('repoUrl'), 'http')]",
      "type": "Microsoft.Web/sites/sourcecontrols",
      "apiVersion": "2021-02-01",
      "name": "[format('{0}/{1}', parameters('ResourcesName'), 'web')]",
      "properties": {
        "repoUrl": "[parameters('repoUrl')]",
        "branch": "main",
        "isManualIntegration": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('ResourcesName'))]"
      ]
    },
    {
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2021-07-01",
      "name": "[parameters('ResourcesName')]",
      "location": "[parameters('location')]",
      "tags": {
        "tagName1": "tagValue1",
        "tagName2": "tagValue2"
      },
      "sku": {
        "capacity": 2,
        "name": "S1"
      },
      "etag": "string",
      "identity": {
        "type": "SystemAssigned",
        "userAssignedIdentities": {}
      },
      "properties": {
        "allowedFqdnList": [ "string" ],
        "authorizationPolicies": [
          {
            "keyName": "string",
            "primaryKey": "string",
            "rights": "RegistryWrite, ServiceConnect, DeviceConnect",
            "secondaryKey": "string"
          }
        ],
        "cloudToDevice": {
          "defaultTtlAsIso8601": "string",
          "feedback": {
            "lockDurationAsIso8601": "string",
            "maxDeliveryCount": 1,
            "ttlAsIso8601": "string"
          },
          "maxDeliveryCount": 1
        },
        "comments": "string",
        "disableDeviceSAS": false,
        "disableLocalAuth": false,
        "disableModuleSAS": false,
        "enableDataResidency": "bool",
        "enableFileUploadNotifications": true,
        "eventHubEndpoints": {},
        "features": "None",
        "ipFilterRules": [
          {
            "action": "Accept",
            "filterName": "string",
            "ipMask": "string"
          }
        ],
        "messagingEndpoints": {},
        "minTlsVersion": "string",
        "networkRuleSets": {
          "applyToBuiltInEventHubEndpoint": false,
          "defaultAction": "Allow",
          "ipRules": [
            {
              "action": "Allow",
              "filterName": "string",
              "ipMask": "string"
            }
          ]
        },
        "privateEndpointConnections": [
          {
            "properties": {
              "privateEndpoint": {},
              "privateLinkServiceConnectionState": {
                "actionsRequired": "string",
                "description": "string",
                "status": "Disconnected"
              }
            }
          }
        ],
        "publicNetworkAccess": "Enabled",
        "restrictOutboundNetworkAccess": false,
        "routing": {
          "endpoints": {
            "eventHubs": [],
            "serviceBusQueues": [],
            "serviceBusTopics": [],
            "storageContainers": []
          },
          "enrichments": [
            {
              "endpointNames": [ "string" ],
              "key": "string",
              "value": "string"
            }
          ],
          "fallbackRoute": {
            "name": "$fallback",
            "source": "DeviceMessages",
            "condition": "true",
            "endpointNames": [
              "events"
            ],
            "isEnabled": true
          },
          "routes": []
        },
        "storageEndpoints": {}
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[parameters('ResourcesName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "name": "[parameters('publicIpName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('publicIpSku')]"
      },
      "properties": {
        "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-11-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-3389",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-11-01",
      "name": "[parameters('ResourcesName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('ResourcesName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "[parameters('ResourcesName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "name": "[parameters('ResourcesName')]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('OSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "StandardSSD_LRS"
            }
          },
          "dataDisks": [
            {
              "diskSizeGB": 1023,
              "lun": 0,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "name": "[parameters('ResourcesName')]",
      "type": "Microsoft.Kusto/clusters",
      "sku": {
        "name": "Standard_E8a_v4",
        "tier": "Standard",
        "capacity": 2
      },
      "apiVersion": "2021-01-01",
      "location": "[parameters('location')]",
      "tags": {
        "Created By": "GitHub quickstart template"
      },
      "properties": {
        "trustedExternalTenants": [],
        "optimizedAutoscale": {
          "version": 1,
          "isEnabled": true,
          "minimum": 2,
          "maximum": 10
        },
        "enableDiskEncryption": false,
        "enableStreamingIngest": false,
        "virtualNetworkConfiguration": {
          "subnetId": "<subnet resource id>",
          "enginePublicIpId": "<Engine service's public IP address resource id>",
          "dataManagementPublicIpId": "<Data management's service public IP address resource id>"
        },
        "keyVaultProperties": {
          "keyName": "<Key name>",
          "keyVaultUri": "<Key vault uri>"
        },
        "enablePurge": false,
        "enableDoubleEncryption": false,
        "engineType": "V3"
      }
    },
    {
      "name": "[concat(parameters('ResourcesName'), '/', parameters('databases_kustodb_name'))]",
      "type": "Microsoft.Kusto/clusters/databases",
      "apiVersion": "2021-01-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Kusto/clusters', parameters('clusters_kustocluster_name'))]"
      ],
      "properties": {
        "softDeletePeriodInDays": 365,
        "hotCachePeriodInDays": 31
      },
      "kind": "ReadWrite"
    },
    {
      "type": "Microsoft.Kusto/Clusters/Databases/DataConnections",
      "apiVersion": "2021-01-01",
      "name": "[concat(parameters('ResourcesName'), '/', parameters('ResourcesName'), '/iothub')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Kusto/Clusters/Databases', parameters('ResourcesName'), parameters('ResourcesName'))]",
        "[resourceId('Microsoft.Kusto/Clusters', parameters('ResourcesName'))]"
      ],
      "kind": "IotHub",
      "properties": {
        "iotHubResourceId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('ResourcesName'), '/providers/Microsoft.Devices/IotHubs/', parameters('ResourcesName'))]",
        "consumerGroup": "$default",
        "dataFormat": "MULTIJSON",
        "eventSystemProperties": [],
        "sharedAccessPolicyName": "iothubowner",
        "databaseRouting": "Single",
        "kind": "IotHub"
      }
    }
  ],
  "outputs": {
    "hostname": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))).dnsSettings.fqdn]"
    }
  }
}
